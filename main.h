/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MAIN_H_RPCGEN
#define _MAIN_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct client_message {
	char command[100];
	char parameter[100];
};
typedef struct client_message client_message;

struct server_message {
	int opcode;
};
typedef struct server_message server_message;

#define WHEEL_PROG 0x33451111
#define V1 1

#if defined(__STDC__) || defined(__cplusplus)
#define REGISTER 1
extern  server_message * register_1(client_message *, CLIENT *);
extern  server_message * register_1_svc(client_message *, struct svc_req *);
#define LOGIN 2
extern  server_message * login_1(client_message *, CLIENT *);
extern  server_message * login_1_svc(client_message *, struct svc_req *);
#define LOGOUT 3
extern  server_message * logout_1(client_message *, CLIENT *);
extern  server_message * logout_1_svc(client_message *, struct svc_req *);
#define JOIN 4
extern  server_message * join_1(client_message *, CLIENT *);
extern  server_message * join_1_svc(client_message *, struct svc_req *);
#define SPIN 5
extern  server_message * spin_1(client_message *, CLIENT *);
extern  server_message * spin_1_svc(client_message *, struct svc_req *);
#define OPEN 6
extern  server_message * open_1(client_message *, CLIENT *);
extern  server_message * open_1_svc(client_message *, struct svc_req *);
#define GUESS 7
extern  server_message * guess_1(client_message *, CLIENT *);
extern  server_message * guess_1_svc(client_message *, struct svc_req *);
#define GUESS_ALL 8
extern  server_message * guess_all_1(client_message *, CLIENT *);
extern  server_message * guess_all_1_svc(client_message *, struct svc_req *);
#define SURENDER 9
extern  server_message * surender_1(client_message *, CLIENT *);
extern  server_message * surender_1_svc(client_message *, struct svc_req *);
#define FUNCTION1 10
extern  server_message * function1_1(client_message *, CLIENT *);
extern  server_message * function1_1_svc(client_message *, struct svc_req *);
#define FUNCTION2 11
extern  server_message * function2_1(client_message *, CLIENT *);
extern  server_message * function2_1_svc(client_message *, struct svc_req *);
#define FUNCTION3 12
extern  server_message * function3_1(client_message *, CLIENT *);
extern  server_message * function3_1_svc(client_message *, struct svc_req *);
extern int wheel_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define REGISTER 1
extern  server_message * register_1();
extern  server_message * register_1_svc();
#define LOGIN 2
extern  server_message * login_1();
extern  server_message * login_1_svc();
#define LOGOUT 3
extern  server_message * logout_1();
extern  server_message * logout_1_svc();
#define JOIN 4
extern  server_message * join_1();
extern  server_message * join_1_svc();
#define SPIN 5
extern  server_message * spin_1();
extern  server_message * spin_1_svc();
#define OPEN 6
extern  server_message * open_1();
extern  server_message * open_1_svc();
#define GUESS 7
extern  server_message * guess_1();
extern  server_message * guess_1_svc();
#define GUESS_ALL 8
extern  server_message * guess_all_1();
extern  server_message * guess_all_1_svc();
#define SURENDER 9
extern  server_message * surender_1();
extern  server_message * surender_1_svc();
#define FUNCTION1 10
extern  server_message * function1_1();
extern  server_message * function1_1_svc();
#define FUNCTION2 11
extern  server_message * function2_1();
extern  server_message * function2_1_svc();
#define FUNCTION3 12
extern  server_message * function3_1();
extern  server_message * function3_1_svc();
extern int wheel_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_client_message (XDR *, client_message*);
extern  bool_t xdr_server_message (XDR *, server_message*);

#else /* K&R C */
extern bool_t xdr_client_message ();
extern bool_t xdr_server_message ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MAIN_H_RPCGEN */
